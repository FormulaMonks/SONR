# Config settings that need to be swapped out by sed on deploy:
# * NGINXDIR -- The nginx root directory
# * UNICORNDIR -- The Unicorn root directory
# * OPENSHIFT_APP_DNS -- The application DNS name. Same as the environment variable.
# * OPENSHIFT_REPO_DIR -- The Openshift Repo Dir. Same as the environment variable.
# * OPENSHIFT_DIY_PORT -- The Openshift DIY Port. Same as the environment variable.

# this sets the user nginx will run as,
# and the number of worker processes
user nobody nobody;
worker_processes  1;

# setup where nginx will log errors to
# and where the nginx process id resides
error_log  NGINXDIRlogs/error.log;
pid        NGINXDIRrun/nginx.pid;

events {
  worker_connections  1024;
  # set to on if you have more than 1 worker_processes
  accept_mutex off;
}

http {
  include       NGINXDIRconf/mime.types;

  default_type application/octet-stream;
  access_log NGINXDIRlogs/nginx.access.log combined;

  # use the kernel sendfile
  sendfile        on;
  # prepend http headers before sendfile()
  tcp_nopush     on;

  keepalive_timeout  5;
  tcp_nodelay        on;

  gzip  on;
  gzip_vary on;
  gzip_min_length 500;

  gzip_disable "MSIE [1-6]\.(?!.*SV1)";
  gzip_types text/plain text/xml text/css
     text/comma-separated-values
     text/javascript application/x-javascript
     application/atom+xml image/x-icon;

  # use the socket we configured in our unicorn.rb
  upstream unicorn_server {
    server unix:UNICORNDIRtmp/sockets/unicorn.sock
        fail_timeout=0;
  }

  # configure the virtual host
  server {
    # replace with your domain name
    server_name OPENSHIFT_APP_DNS;
    # replace this with your static Sinatra app files, root + public
    root OPENSHIFT_REPO_DIR;
    # port to listen for requests on
    listen OPENSHIFT_DIY_PORT;
    # maximum accepted body size of client request
    client_max_body_size 4G;
    # the server will close connections after this time
    keepalive_timeout 5;

    location / {
      try_files $uri @app;
    }

    location @app {
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header Host $http_host;
      proxy_redirect off;
      # pass to the upstream unicorn server mentioned above
      proxy_pass http://unicorn_server;
    }
  }
}